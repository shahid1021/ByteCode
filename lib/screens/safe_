import 'package:flutter/material.dart';

void main() {
  runApp(SafeDriveApp());
}

class SafeDriveApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: SafeDriveScreen(),
    );
  }
}

class SafeDriveScreen extends StatefulWidget {
  @override
  _SafeDriveScreenState createState() => _SafeDriveScreenState();
}

class _SafeDriveScreenState extends State<SafeDriveScreen> {
  TextEditingController startController = TextEditingController();
  TextEditingController endController = TextEditingController();
  DateTime? reportingTime;
  Map<String, bool> options = {
    'Breakfast': false,
    'Lunch': false,
    'Dinner': false,
    'Stay': false,
    'Oil': false,
  };

  Future<void> _pickDate(BuildContext context) async {
    DateTime? picked = await showDatePicker(
      context: context,
      initialDate: DateTime.now(),
      firstDate: DateTime(2000),
      lastDate: DateTime(2100),
    );
    if (picked != null) {
      setState(() {
        reportingTime = picked;
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.green[700],
      bottomNavigationBar: BottomNavigationBar(
        backgroundColor: Colors.green[800],
        selectedItemColor: Colors.white,
        items: [
          BottomNavigationBarItem(icon: Icon(Icons.home), label: ''),
          BottomNavigationBarItem(icon: Icon(Icons.warning), label: ''),
        ],
      ),
      appBar: AppBar(
        backgroundColor: Colors.green[700],
        title: Row(
          children: [
            Icon(Icons.directions_car, color: Colors.white),
            SizedBox(width: 8),
            Text("SAFE DRIVE", style: TextStyle(color: Colors.white)),
          ],
        ),
        actions: [
          IconButton(icon: Icon(Icons.menu, color: Colors.white), onPressed: () {}),
        ],
      ),
      body: Padding(
        padding: EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            TextField(
              controller: startController,
              decoration: InputDecoration(
                hintText: "Starting Place",
                filled: true,
                fillColor: Colors.white,
                border: OutlineInputBorder(),
              ),
            ),
            SizedBox(height: 10),
            TextField(
              controller: endController,
              decoration: InputDecoration(
                hintText: "Ending Place",
                filled: true,
                fillColor: Colors.white,
                border: OutlineInputBorder(),
              ),
            ),
            SizedBox(height: 10),
            Row(
              children: [
                ElevatedButton(
                  onPressed: () => _pickDate(context),
                  child: Text("Reporting Time"),
                ),
                SizedBox(width: 10),
                Text(
                  reportingTime == null ? "Not selected" : "${reportingTime!.toLocal()}".split(' ')[0],
                  style: TextStyle(color: Colors.white),
                ),
              ],
            ),
            SizedBox(height: 10),
            Wrap(
              spacing: 10,
              children: options.keys.map((key) {
                return Row(
                  mainAxisSize: MainAxisSize.min,
                  children: [
                    Checkbox(
                      value: options[key],
                      onChanged: (bool? value) {
                        setState(() {
                          options[key] = value!;
                        });
                      },
                    ),
                    Text(key, style: TextStyle(color: Colors.white)),
                  ],
                );
              }).toList(),
            ),
            SizedBox(height: 10),
            Center(
              child: ElevatedButton(
                onPressed: () {},
                child: Text("Submit"),
              ),
            ),
          ],
        ),
      ),
    );
  }
}
